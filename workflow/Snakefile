


    
rule all: 
    input:
        expand("{prefix}/{reads[name]}/reads_on_contigs.bam", prefix = config["output_directory"], reads = config["reads"])

def get_reads_attribute(attribute, wildcards): 
    index = [sample["name"] for sample in config["reads"]].index(wildcards.reads_name)
    return config["reads"][index][attribute]


rule reads_on_contigs_mapping :
    params: 
        reads_type = lambda wildcards: get_reads_attribute("type", wildcards),
    input:
        script = "workflow/scripts/mapping.sh",
        reads_path = lambda wildcards: get_reads_attribute("path", wildcards),
        contigs = config["assembly"]
    output: "{prefix}/{reads_name}/reads_on_contigs.bam"
    shell: "./{input.script} {output} {input.contigs} {params.reads_type} {input.reads_path} "
